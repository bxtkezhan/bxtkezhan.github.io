<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on bxtkezhan@kk</title>
    <link>http://bxtkezhan.xyz/post/</link>
    <description>Recent content in Posts on bxtkezhan@kk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 16 Sep 2021 17:09:02 +0800</lastBuildDate>
    
	<atom:link href="http://bxtkezhan.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>影像处理・调用摄像头</title>
      <link>http://bxtkezhan.xyz/post/045-opencv-video/</link>
      <pubDate>Thu, 16 Sep 2021 17:09:02 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/045-opencv-video/</guid>
      <description>影像处理免不了读取视频和调用摄像头，在OpenCV中可以使用&lt;code&gt;VideoCapture&lt;/code&gt;工具快速完成视频读取以及摄像头调用。</description>
    </item>
    
    <item>
      <title>影像处理・OpenCV简介</title>
      <link>http://bxtkezhan.xyz/post/044-opencv-intro/</link>
      <pubDate>Tue, 31 Aug 2021 11:42:19 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/044-opencv-intro/</guid>
      <description>下面，我们初步认识一下OpenCV这款计算机视觉处理程序开发库。</description>
    </item>
    
    <item>
      <title>影像处理・操作环境准备</title>
      <link>http://bxtkezhan.xyz/post/043-video-env/</link>
      <pubDate>Sat, 14 Aug 2021 23:04:26 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/043-video-env/</guid>
      <description>本章会使用Python进行一些影像处理操作。除了需要Python3.6+外，我们还需要安装一些扩展库。</description>
    </item>
    
    <item>
      <title>隐写术・将游戏存入图像</title>
      <link>http://bxtkezhan.xyz/post/042-image-game-steganography/</link>
      <pubDate>Sat, 12 Jun 2021 20:17:49 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/042-image-game-steganography/</guid>
      <description>我们已经可以将文本资料通过编码成qrcode然后隐藏到载体图像。事实上Python代码也是文本资料，因此我们实际上也可以将Python代码作为文本资料隐藏到载体图像。</description>
    </item>
    
    <item>
      <title>隐写术・图文隐写术</title>
      <link>http://bxtkezhan.xyz/post/041-image-text-steganography/</link>
      <pubDate>Sat, 12 Jun 2021 20:17:29 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/041-image-text-steganography/</guid>
      <description>把图像隐写术与二维码技术结合就能实现将文本内容转换成二维码，然后隐藏到载体图像的图文隐写术。</description>
    </item>
    
    <item>
      <title>隐写术・QRCode</title>
      <link>http://bxtkezhan.xyz/post/040-qrcode/</link>
      <pubDate>Sat, 12 Jun 2021 20:17:04 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/040-qrcode/</guid>
      <description>上一节我们完成了将二值化图像存储在载体图像中的操作，为了方便存储更加丰富的讯息我们可以将二维码图像作为二值化的内容图像。</description>
    </item>
    
    <item>
      <title>隐写术・图像隐写术</title>
      <link>http://bxtkezhan.xyz/post/039-image-steganography/</link>
      <pubDate>Sat, 12 Jun 2021 20:16:41 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/039-image-steganography/</guid>
      <description>在了解了一些基本的图像处理操作后，我们开始着手实现图像隐写术。</description>
    </item>
    
    <item>
      <title>隐写术・图像处理</title>
      <link>http://bxtkezhan.xyz/post/038-image/</link>
      <pubDate>Sat, 12 Jun 2021 20:15:42 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/038-image/</guid>
      <description>将机要讯息藏匿于没有关联的图像资料是隐写术的常见操作，为了学习这种方法，我们有必要先了解一些基本的图像处理操作。</description>
    </item>
    
    <item>
      <title>隐写术・文件隐写术</title>
      <link>http://bxtkezhan.xyz/post/037-steganography-file/</link>
      <pubDate>Sun, 06 Jun 2021 19:08:55 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/037-steganography-file/</guid>
      <description>维基百科: 隐写术是一门关于信息隐藏的技巧与科学，所谓信息隐藏指的是不让除预期的接收者之外的任何人知晓信息的传递事件或者信息的内容。隐写术的英文叫做Steganography，来源于特里特米乌斯的一本讲述密码学与隐写术的著作Steganographia，该书书名源于希腊语，意为「隐秘书写」。</description>
    </item>
    
    <item>
      <title>隐写术・操作环境准备</title>
      <link>http://bxtkezhan.xyz/post/036-steganography-dev/</link>
      <pubDate>Sun, 06 Jun 2021 19:08:42 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/036-steganography-dev/</guid>
      <description>本章会使用Python进行一些图像处理操作。除了需要Python3.6+外，我们还需要安装一些扩展库。</description>
    </item>
    
    <item>
      <title>网络篇・并发端口扫描</title>
      <link>http://bxtkezhan.xyz/post/035-port-scan-concurrent/</link>
      <pubDate>Sat, 22 May 2021 23:12:41 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/035-port-scan-concurrent/</guid>
      <description>上一节我们实现了一个简单的端口扫描工具，接下来我们把它升级成为多线程版本。</description>
    </item>
    
    <item>
      <title>网络篇・端口扫描</title>
      <link>http://bxtkezhan.xyz/post/034-port-scan/</link>
      <pubDate>Sat, 22 May 2021 23:12:01 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/034-port-scan/</guid>
      <description>维基百科: 端口扫描工具（Port Scanner）指用于探测服务器或主机开放端口情况的工具。常被计算机管理员用于确认安全策略，同时被攻击者用于识别目标主机上的可运作的网络服务。端口扫描定义是客户端向一定范围的服务器端口发送对应请求，以此确认可使用的端口。虽然其本身并不是恶意的网络活动，但也是网络攻击者探测目标主机服务，以利用该服务的已知漏洞的重要手段。端口扫描的主要用途仍然只是确认远程机器某个服务的可用性。</description>
    </item>
    
    <item>
      <title>网络篇・UDP通信</title>
      <link>http://bxtkezhan.xyz/post/033-udp/</link>
      <pubDate>Sat, 22 May 2021 23:11:33 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/033-udp/</guid>
      <description>之前我们尝试了TCP服务器与客户端的通讯，现在我们要实现一个服务器，通过UDP协议与客户端程序通讯。</description>
    </item>
    
    <item>
      <title>网络篇・TCP通信</title>
      <link>http://bxtkezhan.xyz/post/032-tcp/</link>
      <pubDate>Sat, 22 May 2021 23:10:36 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/032-tcp/</guid>
      <description>现在我们要实现一个服务器，通过TCP协议与客户端程序通讯。</description>
    </item>
    
    <item>
      <title>网络篇・Web爬虫</title>
      <link>http://bxtkezhan.xyz/post/031-web-crawler/</link>
      <pubDate>Sat, 22 May 2021 23:10:22 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/031-web-crawler/</guid>
      <description>我们学习了如何使用Python访问网络上的HTTP资源，下面我们将使用一个叫&lt;a href=&#34;https://jandan.net/&#34;&gt;煎蛋&lt;/a&gt;的网站来入手学习Web爬虫技术。</description>
    </item>
    
    <item>
      <title>网络篇・HTTP协议</title>
      <link>http://bxtkezhan.xyz/post/030-http/</link>
      <pubDate>Tue, 11 May 2021 16:28:43 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/030-http/</guid>
      <description>HTTP是一种能够获取如HTML这样的网络资源的protocol(通讯协议)。它是在Web上进行数据交换的基础，是一种client-server协议，也就是说，请求通常是由像浏览器这样的接受方发起的。一个完整的Web文档通常是由不同的子文档拼接而成的，像是文本、布局描述、图片、视频、脚本等等。</description>
    </item>
    
    <item>
      <title>网络篇・操作环境准备</title>
      <link>http://bxtkezhan.xyz/post/029-net-dev/</link>
      <pubDate>Tue, 11 May 2021 16:28:28 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/029-net-dev/</guid>
      <description>本章会使用Python进行一些网络相关的操作。除了需要安装Python外，我们还需要使用Chrome「可以用Chromium替代」或Firefox浏览器进行辅助。</description>
    </item>
    
    <item>
      <title>密码篇・PyCryptodome示例「扩展」</title>
      <link>http://bxtkezhan.xyz/post/028-pycryptodome/</link>
      <pubDate>Thu, 06 May 2021 11:24:03 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/028-pycryptodome/</guid>
      <description>PyCryptodome是一个低级密码学原语的独立Python包，它支持Python2.6、Python2.7以及Python3.4或更新的版本，另外还包括PyPy。</description>
    </item>
    
    <item>
      <title>密码篇・并行密码猜解</title>
      <link>http://bxtkezhan.xyz/post/027-zip-decrypt-parallel/</link>
      <pubDate>Sun, 02 May 2021 15:46:01 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/027-zip-decrypt-parallel/</guid>
      <description>在上一节中我们实现了简单的ZIP压缩包密码猜解。为了充分利用计算机的性能我们可以同时使用多个CPU核心参与破译，这一节中我们将实现多核心版本或者称为并行版本的密码猜解程序。</description>
    </item>
    
    <item>
      <title>汇编语言「Linux/x86-64」・代码解析</title>
      <link>http://bxtkezhan.xyz/post/026-asmx64-explanation/</link>
      <pubDate>Sat, 01 May 2021 19:38:19 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/026-asmx64-explanation/</guid>
      <description>上一节中我们编译运行了一段NASM汇编代码，接下来我们将针对上一节的代码进行解析，了解一些具体的汇编知识。</description>
    </item>
    
    <item>
      <title>密码篇・密码猜解</title>
      <link>http://bxtkezhan.xyz/post/025-zip-decrypt/</link>
      <pubDate>Sun, 25 Apr 2021 22:00:57 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/025-zip-decrypt/</guid>
      <description>几乎所有成熟的商用密码都能经受严格的密码破解分析，一般来说想要对一个加密的数据进行破译最简单的方法就是直接猜测密钥，如果条件允许甚至可以进行大量尝试。为了提高破译效率可以先准备好大量的可能性较高的密钥，然后依次遍历猜测密钥，这种做法有个名词叫“字典爆破”。</description>
    </item>
    
    <item>
      <title>密码篇・实际应用</title>
      <link>http://bxtkezhan.xyz/post/024-cryptography-application/</link>
      <pubDate>Sun, 25 Apr 2021 17:20:41 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/024-cryptography-application/</guid>
      <description>之前我们学习了一些密码学的基本概念和原理，接下来我们研究一下密码学技术在实际应用中需要关注的一些问题。</description>
    </item>
    
    <item>
      <title>懒惰人哪，你要睡到几时呢？</title>
      <link>http://bxtkezhan.xyz/post/023-proverbs/</link>
      <pubDate>Sat, 24 Apr 2021 20:04:51 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/023-proverbs/</guid>
      <description>箴言 6 9 懒惰人哪，你要睡到几时呢？你何时睡醒呢？10 再睡片时，打盹片时，抱着手躺卧片时，11 你的贫穷就必如强盗速来，你的缺乏仿佛拿兵器的人来到。</description>
    </item>
    
    <item>
      <title>汇编语言「Linux/x86-64」・第一步</title>
      <link>http://bxtkezhan.xyz/post/022-asmx64-first/</link>
      <pubDate>Tue, 20 Apr 2021 00:26:43 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/022-asmx64-first/</guid>
      <description>汇编语言是一系列用于电脑、处理器、控制器，或其他可以编程器件的低级语言的统称。通常不同的设备会对应不同的汇编语言。下面着重介绍Linux下的64位汇编语言 &lt;strong&gt;NASM x86-64&lt;/strong&gt;，我这边主要使用Ubuntu系统进行作业，原则上其他版本的64位Linux也同样可以进行相应的操作，只不过某些命令会有所不同，需要大家注意。</description>
    </item>
    
    <item>
      <title>密码篇・公开密钥加密</title>
      <link>http://bxtkezhan.xyz/post/021-public-key/</link>
      <pubDate>Sun, 18 Apr 2021 18:17:37 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/021-public-key/</guid>
      <description>维基百科: 公开密钥密码学（英语：Public-key cryptography）也称非对称式密码学（英语：Asymmetric cryptography）是密码学的一种算法，它需要两个密钥，一个是公开密钥，另一个是私有密钥；公钥用作加密，私钥则用作解密。使用公钥把明文加密后所得的密文，只能用相对应的私钥才能解密并得到原本的明文，最初用来加密的公钥不能用作解密。</description>
    </item>
    
    <item>
      <title>保守公义的心，行走正直的路</title>
      <link>http://bxtkezhan.xyz/post/020-proverbs/</link>
      <pubDate>Sat, 17 Apr 2021 19:20:59 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/020-proverbs/</guid>
      <description>箴言 11 1 诡诈的天平为耶和华所憎恶，公平的法码为他所喜悦。 2 骄傲来，羞耻也来，谦逊人却有智慧。</description>
    </item>
    
    <item>
      <title>密码篇・对称密钥加密</title>
      <link>http://bxtkezhan.xyz/post/019-symmetric-key/</link>
      <pubDate>Sun, 11 Apr 2021 14:18:23 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/019-symmetric-key/</guid>
      <description>对称密钥算法（英语：Symmetric-key algorithm）又称为对称加密、私钥加密、共享密钥加密，是密码学中的一类加密算法。这类算法在加密和解密时使用相同的密钥，或是使用两个可以简单地相互推算的密钥。</description>
    </item>
    
    <item>
      <title>密码篇・密码学简介</title>
      <link>http://bxtkezhan.xyz/post/018-cryptography-info/</link>
      <pubDate>Sat, 10 Apr 2021 22:20:15 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/018-cryptography-info/</guid>
      <description>密码学（英语：Cryptography）可分为古典密码学和现代密码学。古典密码学主要关注信息的保密书写和传递，以及与其相对应的破译方法。而现代密码学不只关注信息保密问题，还同时涉及信息完整性验证（消息验证码）、信息发布的不可抵赖性（数字签名）、以及在分布式计算中产生的来源于内部和外部的攻击的所有信息安全问题。</description>
    </item>
    
    <item>
      <title>你的泉源岂可涨溢在外？</title>
      <link>http://bxtkezhan.xyz/post/017-proverbs/</link>
      <pubDate>Fri, 09 Apr 2021 17:41:20 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/017-proverbs/</guid>
      <description>箴言 5 15 你要喝自己池中的水，饮自己井里的活水。 16 你的泉源岂可涨溢在外？你的河水岂可流在街上？ 17 唯独归你一人，不可与外人同用。</description>
    </item>
    
    <item>
      <title>推荐几本C/C&#43;&#43;书籍【免费下载】</title>
      <link>http://bxtkezhan.xyz/post/books_002/</link>
      <pubDate>Fri, 09 Apr 2021 14:25:24 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/books_002/</guid>
      <description>根据之前的投票结果，C/C++也是票数非常多的选项，那么这里也推荐几本C/C++书籍。</description>
    </item>
    
    <item>
      <title>密码篇・操作环境准备</title>
      <link>http://bxtkezhan.xyz/post/016-python-install/</link>
      <pubDate>Thu, 08 Apr 2021 23:43:25 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/016-python-install/</guid>
      <description>Python作为一门流行的脚本语言很早就被Mac OS、主流Linux发行版所预装，一般来说只需要确保自己系统的Python版本不要太旧「建议高于3.5」，如果是Windows用户可以去往Python的官方网站 &lt;a href=&#34;https://www.python.org&#34;&gt;www.python.org&lt;/a&gt; 进行下载安装。</description>
    </item>
    
    <item>
      <title>初学篇・猜字游戏「阶段练习」</title>
      <link>http://bxtkezhan.xyz/post/015-digit-game/</link>
      <pubDate>Tue, 06 Apr 2021 13:58:16 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/015-digit-game/</guid>
      <description>猜字游戏涉及的Python基础知识比较丰富且十分容易实现，可以作为《黑客之路・Python篇・初学者篇》的阶段性练习“项目”。</description>
    </item>
    
    <item>
      <title>初学篇・面向对象&amp;数据结构</title>
      <link>http://bxtkezhan.xyz/post/014-object-struct/</link>
      <pubDate>Sun, 04 Apr 2021 19:04:02 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/014-object-struct/</guid>
      <description>在Python当中，我们常常使用到的基本数据类型有整型&lt;code&gt;int&lt;/code&gt;、浮点型&lt;code&gt;float&lt;/code&gt;、字符串类型&lt;code&gt;str&lt;/code&gt;……，以及结构类型列表&lt;code&gt;list&lt;/code&gt;、元组&lt;code&gt;tuple&lt;/code&gt;，事实上我们也可以自己来定义类型，这将涉及到Python的面向对象编程。</description>
    </item>
    
    <item>
      <title>初学篇・函数的定义与调用</title>
      <link>http://bxtkezhan.xyz/post/013-function/</link>
      <pubDate>Sun, 04 Apr 2021 15:54:47 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/013-function/</guid>
      <description>函数是指可重复使用的程序片段。被用来为某个代码块赋予名字，通过这一特殊的名字可以在程序的任何地方来运行代码块，并可重复任何次数。这就是所谓的调用函数。我们已经使用过了许多内置的函数，例如: &lt;code&gt;print&lt;/code&gt;、&lt;code&gt;len&lt;/code&gt;和&lt;code&gt;range&lt;/code&gt;。</description>
    </item>
    
    <item>
      <title>初学篇・循环控制语句</title>
      <link>http://bxtkezhan.xyz/post/012-loop/</link>
      <pubDate>Sun, 04 Apr 2021 14:07:06 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/012-loop/</guid>
      <description>在Python中可以通过&lt;code&gt;while&lt;/code&gt;与&lt;code&gt;for&lt;/code&gt;两种循环语句来处理循环问题。</description>
    </item>
    
    <item>
      <title>初学篇・条件控制语句</title>
      <link>http://bxtkezhan.xyz/post/011-if/</link>
      <pubDate>Sat, 03 Apr 2021 22:55:25 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/011-if/</guid>
      <description>&lt;code&gt;if&lt;/code&gt;语句用以根据条件判断如何执行代码: 如果条件为真&lt;code&gt;True&lt;/code&gt;，我们将运行一块语句(称作 if-block 或 if 块)，否则我们将运行另一块语句(称作 else-block 或 else 块)。其中&lt;code&gt;else&lt;/code&gt;从句是可选的。</description>
    </item>
    
    <item>
      <title>初学篇・逻辑运算&amp;比较运算</title>
      <link>http://bxtkezhan.xyz/post/010-logic-compare/</link>
      <pubDate>Sat, 03 Apr 2021 22:05:14 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/010-logic-compare/</guid>
      <description>Python当中可以用&lt;code&gt;and&lt;/code&gt;、&lt;code&gt;or&lt;/code&gt;、&lt;code&gt;not&lt;/code&gt;关键字来进行与、或、非逻辑运算，而&lt;code&gt;True&lt;/code&gt;、&lt;code&gt;False&lt;/code&gt;则用于表示布尔值中的真与假；Python当中可以使用&lt;code&gt;&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;gt;=&lt;/code&gt;、&lt;code&gt;==&lt;/code&gt;、&lt;code&gt;&amp;lt;=&lt;/code&gt;、&lt;code&gt;&amp;lt;&lt;/code&gt;、&lt;code&gt;!=&lt;/code&gt;符号来进行值的比较。</description>
    </item>
    
    <item>
      <title>初学篇・Python计算器</title>
      <link>http://bxtkezhan.xyz/post/009-calc/</link>
      <pubDate>Sat, 03 Apr 2021 20:43:12 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/009-calc/</guid>
      <description>我们可以使用Python来进行一系列的计算器操作，如果足够熟悉Python，那么它将胜过许多高级计算器，甚至某些高级计算器就内置了Python，例如: Casio 卡西欧 FX-9860 GIII 图形计算器。</description>
    </item>
    
    <item>
      <title>初学篇・第一步“你好世界”</title>
      <link>http://bxtkezhan.xyz/post/008-first/</link>
      <pubDate>Sat, 03 Apr 2021 19:25:30 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/008-first/</guid>
      <description>Python是一种广泛使用的直译式、进阶和通用的程式语言。Python支援多种程式设计范式，包括函数式、指令式、结构化、物件导向和反射式程式。它拥有动态型别系统和垃圾回收功能，能够自动管理记忆体使用，并且其本身拥有一个巨大而广泛的标准库。</description>
    </item>
    
    <item>
      <title>黑客之路・编译原理</title>
      <link>http://bxtkezhan.xyz/post/tutorial_003/</link>
      <pubDate>Wed, 31 Mar 2021 23:21:44 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/tutorial_003/</guid>
      <description>和编程相关的一些计算机技术，包括编译原理，汇编语言，llvm，gcc。</description>
    </item>
    
    <item>
      <title>黑客之路・C/C&#43;&#43;篇</title>
      <link>http://bxtkezhan.xyz/post/tutorial_002/</link>
      <pubDate>Wed, 31 Mar 2021 23:21:42 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/tutorial_002/</guid>
      <description>正在制作中&amp;hellip;</description>
    </item>
    
    <item>
      <title>黑客之路・Python篇</title>
      <link>http://bxtkezhan.xyz/post/tutorial_001/</link>
      <pubDate>Wed, 31 Mar 2021 23:21:39 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/tutorial_001/</guid>
      <description>围绕Python程序语言展开的一系列或有趣或实用的技术，欢迎喜欢计算机，软硬件，Python编程技术的朋友参与学习。</description>
    </item>
    
    <item>
      <title>支持While语句</title>
      <link>http://bxtkezhan.xyz/post/007-while/</link>
      <pubDate>Wed, 31 Mar 2021 14:17:49 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/007-while/</guid>
      <description>下面我们来让程序语言支持While语句，这会使得&lt;strong&gt;bkcalclang&lt;/strong&gt;能够解决一些依赖循环结构处理的问题。</description>
    </item>
    
    <item>
      <title>推荐几本Python书籍【免费下载】</title>
      <link>http://bxtkezhan.xyz/post/books_001/</link>
      <pubDate>Mon, 29 Mar 2021 20:26:01 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/books_001/</guid>
      <description>根据投票结果，Python为票数最多的选项，那么这里推荐几本Python书籍。</description>
    </item>
    
    <item>
      <title>支持If语句</title>
      <link>http://bxtkezhan.xyz/post/006-if/</link>
      <pubDate>Mon, 29 Mar 2021 16:42:47 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/006-if/</guid>
      <description>下面我们来让程序语言支持If语句，这会使得&lt;strong&gt;bkcalclang&lt;/strong&gt;能够处理更加复杂的问题。</description>
    </item>
    
    <item>
      <title>使程序语言支持变量</title>
      <link>http://bxtkezhan.xyz/post/005-assign/</link>
      <pubDate>Fri, 26 Mar 2021 14:49:43 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/005-assign/</guid>
      <description>下面我们来让计算器程序支持变量的使用，使得程序可以设置和获取变量的值。从现在开始我将不掩藏我们要实现的是一个程序语言，因为出自计算器所以命名为 &lt;strong&gt;bkcalclang&lt;/strong&gt;</description>
    </item>
    
    <item>
      <title>使计算器支持语句块</title>
      <link>http://bxtkezhan.xyz/post/004-block/</link>
      <pubDate>Wed, 24 Mar 2021 18:45:28 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/004-block/</guid>
      <description>下面我们来为计算器程序增加语句块功能，使得程序可以做批量运算，类似于程序语言中的代码块。</description>
    </item>
    
    <item>
      <title>递归向下算法实现Calc</title>
      <link>http://bxtkezhan.xyz/post/003-calc/</link>
      <pubDate>Wed, 17 Mar 2021 21:26:32 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/003-calc/</guid>
      <description>利用递归向下算法结合我们的&lt;code&gt;BKLexer&lt;/code&gt;实现支持四则运算与括号优先级的计算器程序。</description>
    </item>
    
    <item>
      <title>使用BKLexer进行词法分析</title>
      <link>http://bxtkezhan.xyz/post/002-bklexer/</link>
      <pubDate>Sat, 13 Mar 2021 22:55:41 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/002-bklexer/</guid>
      <description>前几天我已经封装好了词法分析器并命名&lt;code&gt;BKLexer&lt;/code&gt;，当前&lt;code&gt;BKLexer&lt;/code&gt;分别支持Go/C++/Python。</description>
    </item>
    
    <item>
      <title>词法分析器</title>
      <link>http://bxtkezhan.xyz/post/001-lexer/</link>
      <pubDate>Sat, 06 Mar 2021 21:26:02 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/001-lexer/</guid>
      <description>维基百科介绍：词法分析是计算机科学中将字符序列转换为标记序列的过程。进行词法分析的程序或者函数叫作词法分析器。️</description>
    </item>
    
  </channel>
</rss>