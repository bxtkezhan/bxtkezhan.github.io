<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编译 on bxtkezhan@kk</title>
    <link>http://bxtkezhan.xyz/categories/%E7%BC%96%E8%AF%91/</link>
    <description>Recent content in 编译 on bxtkezhan@kk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 17 Oct 2021 15:35:44 +0800</lastBuildDate>
    
	<atom:link href="http://bxtkezhan.xyz/categories/%E7%BC%96%E8%AF%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>汇编语言「Linux/x86-64」・調用C程序</title>
      <link>http://bxtkezhan.xyz/post/049-asmx64-c/</link>
      <pubDate>Sun, 17 Oct 2021 15:35:44 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/049-asmx64-c/</guid>
      <description>在有操作系統的情況下使用純彙編開發程序的情況非常少，即便是不得不用彙編的場景也常常是使用彙編結合高級編程語言的方式進行開發。下面我們來了解一下如何在彙編之中調用C程序以及在C程序中調用彙編。</description>
    </item>
    
    <item>
      <title>汇编语言「Linux/x86-64」・代码解析</title>
      <link>http://bxtkezhan.xyz/post/026-asmx64-explanation/</link>
      <pubDate>Sat, 01 May 2021 19:38:19 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/026-asmx64-explanation/</guid>
      <description>上一节中我们编译运行了一段NASM汇编代码，接下来我们将针对上一节的代码进行解析，了解一些具体的汇编知识。</description>
    </item>
    
    <item>
      <title>汇编语言「Linux/x86-64」・第一步</title>
      <link>http://bxtkezhan.xyz/post/022-asmx64-first/</link>
      <pubDate>Tue, 20 Apr 2021 00:26:43 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/022-asmx64-first/</guid>
      <description>汇编语言是一系列用于电脑、处理器、控制器，或其他可以编程器件的低级语言的统称。通常不同的设备会对应不同的汇编语言。下面着重介绍Linux下的64位汇编语言 &lt;strong&gt;NASM x86-64&lt;/strong&gt;，我这边主要使用Ubuntu系统进行作业，原则上其他版本的64位Linux也同样可以进行相应的操作，只不过某些命令会有所不同，需要大家注意。</description>
    </item>
    
    <item>
      <title>黑客之路・编译原理</title>
      <link>http://bxtkezhan.xyz/post/tutorial_003/</link>
      <pubDate>Wed, 31 Mar 2021 23:21:44 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/tutorial_003/</guid>
      <description>和编程相关的一些计算机技术，包括编译原理，汇编语言，llvm，gcc。</description>
    </item>
    
    <item>
      <title>支持While语句</title>
      <link>http://bxtkezhan.xyz/post/007-while/</link>
      <pubDate>Wed, 31 Mar 2021 14:17:49 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/007-while/</guid>
      <description>下面我们来让程序语言支持While语句，这会使得&lt;strong&gt;bkcalclang&lt;/strong&gt;能够解决一些依赖循环结构处理的问题。</description>
    </item>
    
    <item>
      <title>支持If语句</title>
      <link>http://bxtkezhan.xyz/post/006-if/</link>
      <pubDate>Mon, 29 Mar 2021 16:42:47 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/006-if/</guid>
      <description>下面我们来让程序语言支持If语句，这会使得&lt;strong&gt;bkcalclang&lt;/strong&gt;能够处理更加复杂的问题。</description>
    </item>
    
    <item>
      <title>使程序语言支持变量</title>
      <link>http://bxtkezhan.xyz/post/005-assign/</link>
      <pubDate>Fri, 26 Mar 2021 14:49:43 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/005-assign/</guid>
      <description>下面我们来让计算器程序支持变量的使用，使得程序可以设置和获取变量的值。从现在开始我将不掩藏我们要实现的是一个程序语言，因为出自计算器所以命名为 &lt;strong&gt;bkcalclang&lt;/strong&gt;</description>
    </item>
    
    <item>
      <title>使计算器支持语句块</title>
      <link>http://bxtkezhan.xyz/post/004-block/</link>
      <pubDate>Wed, 24 Mar 2021 18:45:28 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/004-block/</guid>
      <description>下面我们来为计算器程序增加语句块功能，使得程序可以做批量运算，类似于程序语言中的代码块。</description>
    </item>
    
    <item>
      <title>递归向下算法实现Calc</title>
      <link>http://bxtkezhan.xyz/post/003-calc/</link>
      <pubDate>Wed, 17 Mar 2021 21:26:32 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/003-calc/</guid>
      <description>利用递归向下算法结合我们的&lt;code&gt;BKLexer&lt;/code&gt;实现支持四则运算与括号优先级的计算器程序。</description>
    </item>
    
    <item>
      <title>使用BKLexer进行词法分析</title>
      <link>http://bxtkezhan.xyz/post/002-bklexer/</link>
      <pubDate>Sat, 13 Mar 2021 22:55:41 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/002-bklexer/</guid>
      <description>前几天我已经封装好了词法分析器并命名&lt;code&gt;BKLexer&lt;/code&gt;，当前&lt;code&gt;BKLexer&lt;/code&gt;分别支持Go/C++/Python。</description>
    </item>
    
    <item>
      <title>词法分析器</title>
      <link>http://bxtkezhan.xyz/post/001-lexer/</link>
      <pubDate>Sat, 06 Mar 2021 21:26:02 +0800</pubDate>
      
      <guid>http://bxtkezhan.xyz/post/001-lexer/</guid>
      <description>维基百科介绍：词法分析是计算机科学中将字符序列转换为标记序列的过程。进行词法分析的程序或者函数叫作词法分析器。️</description>
    </item>
    
  </channel>
</rss>