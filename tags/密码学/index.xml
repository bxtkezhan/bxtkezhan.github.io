<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>密码学 on bxtkezhan@kk</title><link>https://bxtkezhan.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/</link><description>Recent content in 密码学 on bxtkezhan@kk</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 06 May 2021 11:24:03 +0800</lastBuildDate><atom:link href="https://bxtkezhan.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/index.xml" rel="self" type="application/rss+xml"/><item><title>密码篇・PyCryptodome示例「扩展」</title><link>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87pycryptodome%E7%A4%BA%E4%BE%8B%E6%89%A9%E5%B1%95/</link><pubDate>Thu, 06 May 2021 11:24:03 +0800</pubDate><guid>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87pycryptodome%E7%A4%BA%E4%BE%8B%E6%89%A9%E5%B1%95/</guid><description>PyCryptodome是一个低级密码学原语的独立Python包，它支持Python2.6、Python2.7以及Python3.4或更新的版本，另外还包括PyPy。</description></item><item><title>密码篇・并行密码猜解</title><link>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%B9%B6%E8%A1%8C%E5%AF%86%E7%A0%81%E7%8C%9C%E8%A7%A3/</link><pubDate>Sun, 02 May 2021 15:46:01 +0800</pubDate><guid>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%B9%B6%E8%A1%8C%E5%AF%86%E7%A0%81%E7%8C%9C%E8%A7%A3/</guid><description>在上一节中我们实现了简单的ZIP压缩包密码猜解。为了充分利用计算机的性能我们可以同时使用多个CPU核心参与破译，这一节中我们将实现多核心版本或者称为并行版本的密码猜解程序。</description></item><item><title>密码篇・密码猜解</title><link>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AF%86%E7%A0%81%E7%8C%9C%E8%A7%A3/</link><pubDate>Sun, 25 Apr 2021 22:00:57 +0800</pubDate><guid>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AF%86%E7%A0%81%E7%8C%9C%E8%A7%A3/</guid><description>几乎所有成熟的商用密码都能经受严格的密码破解分析，一般来说想要对一个加密的数据进行破译最简单的方法就是直接猜测密钥，如果条件允许甚至可以进行大量尝试。为了提高破译效率可以先准备好大量的可能性较高的密钥，然后依次遍历猜测密钥，这种做法有个名词叫“字典爆破”。</description></item><item><title>密码篇・实际应用</title><link>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8/</link><pubDate>Sun, 25 Apr 2021 17:20:41 +0800</pubDate><guid>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8/</guid><description>之前我们学习了一些密码学的基本概念和原理，接下来我们研究一下密码学技术在实际应用中需要关注的一些问题。</description></item><item><title>密码篇・公开密钥加密</title><link>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86/</link><pubDate>Sun, 18 Apr 2021 18:17:37 +0800</pubDate><guid>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86/</guid><description>维基百科: 公开密钥密码学（英语：Public-key cryptography）也称非对称式密码学（英语：Asymmetric cryptography）是密码学的一种算法，它需要两个密钥，一个是公开密钥，另一个是私有密钥；公钥用作加密，私钥则用作解密。使用公钥把明文加密后所得的密文，只能用相对应的私钥才能解密并得到原本的明文，最初用来加密的公钥不能用作解密。</description></item><item><title>密码篇・对称密钥加密</title><link>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AF%B9%E7%A7%B0%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86/</link><pubDate>Sun, 11 Apr 2021 14:18:23 +0800</pubDate><guid>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AF%B9%E7%A7%B0%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86/</guid><description>对称密钥算法（英语：Symmetric-key algorithm）又称为对称加密、私钥加密、共享密钥加密，是密码学中的一类加密算法。这类算法在加密和解密时使用相同的密钥，或是使用两个可以简单地相互推算的密钥。</description></item><item><title>密码篇・密码学简介</title><link>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AE%80%E4%BB%8B/</link><pubDate>Sat, 10 Apr 2021 22:20:15 +0800</pubDate><guid>https://bxtkezhan.github.io/%E5%AF%86%E7%A0%81%E7%AF%87%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AE%80%E4%BB%8B/</guid><description>密码学（英语：Cryptography）可分为古典密码学和现代密码学。古典密码学主要关注信息的保密书写和传递，以及与其相对应的破译方法。而现代密码学不只关注信息保密问题，还同时涉及信息完整性验证（消息验证码）、信息发布的不可抵赖性（数字签名）、以及在分布式计算中产生的来源于内部和外部的攻击的所有信息安全问题。</description></item></channel></rss>