<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mnist on bxtkezhan@kk</title><link>http://bxtkezhan.github.io/tags/mnist/</link><description>Recent content in mnist on bxtkezhan@kk</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 03 Oct 2022 19:48:53 +0800</lastBuildDate><atom:link href="http://bxtkezhan.github.io/tags/mnist/index.xml" rel="self" type="application/rss+xml"/><item><title>人工神经网络・批量标准化</title><link>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%89%B9%E9%87%8F%E6%A0%87%E5%87%86%E5%8C%96/</link><pubDate>Mon, 03 Oct 2022 19:48:53 +0800</pubDate><guid>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%89%B9%E9%87%8F%E6%A0%87%E5%87%86%E5%8C%96/</guid><description>在数据处理中常常使用标准化技术对数据进行处理，一般来说标准化处理有利于提升模型对数据的拟合效果。我们也可以使用标准化技术对神经网络模型进行升级。</description></item><item><title>人工神经网络・卷积神经网络</title><link>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</link><pubDate>Mon, 03 Oct 2022 19:48:23 +0800</pubDate><guid>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</guid><description>我们之前构建的神经网络都是靠普通的线性网络层Linear进行拟合，然而在处理图像数据的时候我们其实可以用效果更好的卷积网络层。将卷积网络层加入到我们的神经网络就可以在一定程度上提升模型的准确率，而由于此种神经网络的结构中包含卷积网络层，因此，也常被叫做卷积神经网络。</description></item><item><title>人工神经网络・ReLU激活函数</title><link>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Crelu%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 03 Oct 2022 19:47:10 +0800</pubDate><guid>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Crelu%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/</guid><description>上一节中我们实现了一个多层感知器神经网络用来处理图像分类问题。然而那个神经网络模型还是比较「稚嫩」，我们可以对其稍加修改，实现一定程度上的提升。</description></item><item><title>人工神经网络・多层感知器</title><link>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8/</link><pubDate>Sun, 02 Oct 2022 22:29:29 +0800</pubDate><guid>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%A4%9A%E5%B1%82%E6%84%9F%E7%9F%A5%E5%99%A8/</guid><description>之前我们都是采用手工构造的数据来进行学习，这一次我们将处理一个真实场景的问题——手写数字识别。</description></item><item><title>人工神经网络・Softmax多分类</title><link>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Csoftmax%E5%A4%9A%E5%88%86%E7%B1%BB/</link><pubDate>Thu, 29 Sep 2022 13:48:49 +0800</pubDate><guid>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9Csoftmax%E5%A4%9A%E5%88%86%E7%B1%BB/</guid><description>逻辑回归常用于处理二分类问题的，虽然也可以通过〚联合〛的方式处理多分类问题「有超过两个以上的类别」但这样比较麻烦。在处理多分类问题的时候我们可以使用softmax替代逻辑回归里的sigmoid激活函数，这样可以实现多分类操作。</description></item><item><title>人工神经网络・逻辑回归</title><link>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</link><pubDate>Mon, 26 Sep 2022 15:02:00 +0800</pubDate><guid>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</guid><description>先前我们在最小二乘拟合那一节中了解到如何使用最小二乘的方法拟合多项式方程，那么今天我们再来学习一种「拟合」方程的方法——逻辑回归。</description></item><item><title>人工神经网络・操作环境准备</title><link>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</link><pubDate>Fri, 23 Sep 2022 23:05:46 +0800</pubDate><guid>http://bxtkezhan.github.io/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</guid><description>本章介绍一些人工神经网络开发的技术，下面列出本章节会使用的一些依赖库。</description></item></channel></rss>